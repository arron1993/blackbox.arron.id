from ctypes import Structure, sizeof, c_float, c_int32, c_wchar, c_int

class SPageFileStatic(Structure):
	_fields_ = [
		("smVersion", c_wchar * 15),
		("acVersion", c_wchar * 15),
		("numberOfSessions", c_int),
		("numCars", c_int),
		("carModel", c_wchar * 33),
		("track", c_wchar * 33),
		("playerName", c_wchar * 33),
		("playerSurname", c_wchar * 33),
		("playerNick", c_wchar * 33),
		("sectorCount", c_int),
		("maxTorque", c_float),
		("maxPower", c_float),
		("maxRpm", c_int),
		("maxFuel", c_float),
		("suspensionMaxTravel", c_float * 4),
		("tyreRadius", c_float * 4),
		("maxTurboBoost", c_float * 4),
		("deprecated_1", c_float),
		("deprecated_2", c_float),
		("penaltiesEnabled", c_int),
		("aidFuelRate", c_float),
		("aidTireRate", c_float),
		("aidMechanicalDamage", c_float),
		("aidAllowTyreBlankets", c_int),
		("aidStability", c_float),
		("aidAutoClutch", c_int),
		("aidAutoBlip", c_int),
		("hasDRS", c_int),
		("hasERS", c_int),
		("hasKERS", c_int),
		("kersMaxJ", c_float),
		("engineBrakeSettingsCount", c_int),
		("ersPowerControllerCount", c_int),
		("trackSPlineLength", c_float),
		("trackConfiguration", c_wchar * 33),
		("ersMaxJ", c_float),
		("isTimedRace", c_int),
		("hasExtraLap", c_int),
		("carSkin", c_wchar * 33),
		("reversedGridPositions", c_int),
		("PitWindowStart", c_int),
		("PitWindowEnd", c_int),
		("isOnline", c_int),
	]

	def toDict(self):
		return {
			"PitWindowStart": self.PitWindowStart,
			"PitWindowEnd": self.PitWindowEnd,
		}